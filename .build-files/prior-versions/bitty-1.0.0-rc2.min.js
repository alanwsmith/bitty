function t(){return self.crypto.randomUUID()}class e extends HTMLElement{constructor(){super(),this.version=[1,0,0,"rc2"],this.metadata=["Copyright 2025 - Alan W. Smith","MIT Based License at: htttp://bitty-js.alanwsmith.com/","License Hash: 2y1pBoEREr3eWA1ubCCOXdmRCdn"]}#t=["click","input"];#e=[];#s=[];async connectedCallback(){this.setParentId(),this.setIds(),await this.makeConnection(),this.conn&&(this.requestUpdate=this.handleEvent.bind(this),this.watchMutations=this.handleMutations.bind(this),this.catchWatchEventBrdige=this.catchWatchEvent.bind(this),this.loadReceivers(),this.loadWatchSignals(),this.initBitty(),this.addEventListeners(),"function"==typeof this.conn.bittyInit&&this.conn.bittyInit())}addEventListeners(){this.#t.forEach(e=>{this.addEventListener(e,e=>{e.uuid=t(),this.requestUpdate.call(this,e)})}),this.addEventListener("bittyhoist",t=>{t.detail&&t.detail.event&&this.catchWatchEvent.call(this,t.detail.event)})}addReceiver(t,e){this.conn[t]&&this.#e.push({key:t,f:s=>{this.conn[t](s,e)}})}async makeConnection(){try{if(!this.dataset||!this.dataset.connect)return void this.error("Missing data-connect attribute");if("undefined"!=typeof bittyClasses&&void 0!==window.bittyClasses[this.dataset.connect])this.connPath=null,this.connClass=this.dataset.connect,this.conn=new bittyClasses[this.connClass];else{const t=this.dataset.connect.split("|");this.connPath=t[0];const e=await import(this.connPath);void 0===t[1]?(this.connClass="default",this.conn=new e.default):(this.connClass=t[1],this.conn=new e[this.connClass])}}catch(t){this.error(t)}}send(t,e){t.target&&t.target.dataset&&(t.target.dataset.send=e),this.handleEvent(t)}error(t){console.error(`bitty-js error: ${t} on element ${this.dataset.uuid}`)}handleEvent(t){"bittyconnect"!==t.type&&t.stopPropagation();const e=new CustomEvent("bittyhoist",{bubbles:!0,detail:{event:t}});this.parentElement.dispatchEvent(e),t.target&&t.target.dataset&&t.target.dataset.send&&t.target.dataset.send.split("|").forEach(e=>{let s=0;this.#e.forEach(i=>{i.key===e&&(s+=1,i.f(t))}),0===s&&this.conn[e]&&this.conn[e](t,null)})}handleMutations(t,e){for(const e of t)if("childList"===e.type){for(const t of e.removedNodes)if(t.dataset&&(t.dataset.receive||t.dataset.send||t.dataset.watch))return this.setIds(),void this.loadReceivers();for(const t of e.addedNodes)if(t.dataset&&(t.dataset.receive||t.dataset.send||t.dataset.watch))return this.setIds(),void this.loadReceivers()}}initBitty(){this.conn.api=this,this.observerConfig={childList:!0,subtree:!0},this.observer=new MutationObserver(this.watchMutations),this.observer.observe(this,this.observerConfig),this.dataset.send&&this.handleEvent({type:"bittyconnect",target:this}),this.dataset.listeners&&(this.#t=this.dataset.listeners.split("|"))}loadReceivers(){this.#e=[];this.querySelectorAll("[data-receive]").forEach(t=>{t.dataset.receive.split("|").forEach(e=>{this.addReceiver(e,t)})})}loadWatchSignals(){this.dataset.watch&&this.dataset.watch.split("|").forEach(t=>{this.#s.push(t)})}setIds(){this.querySelectorAll("*").forEach(e=>{void 0===e.dataset.uuid&&(e.dataset.uuid=t())})}setParentId(){const e=t();this.dataset.uuid=e}catchWatchEvent(t){t.target&&t.target.dataset&&t.target.dataset.send&&t.target.dataset.send.split("|").forEach(e=>{if(this.#s.includes(e)){let s=0;this.#e.forEach(i=>{i.key===e&&(s+=1,i.f(t))}),0===s&&void 0!==this.conn[e]&&this.conn[e](t,null)}})}}customElements.define("bitty-js",e);