function t(){return self.crypto.randomUUID()}class e extends HTMLElement{constructor(){super(),this.version=[1,0,0,"rc4"],this.metadata=["Copyright 2025 - Alan W. Smith","License at: htttp://bitty.alanwsmith.com/ - 2y1pBoEREr3eWA1ubCCOXdmRCdn"]}#t=["click","input"];#e=[];async connectedCallback(){this.dataset.uuid=t(),this.setIds(),await this.makeConnection(),this.conn&&(this.handleEventBridge=this.handleEvent.bind(this),this.watchMutations=this.handleMutations.bind(this),this.loadReceivers(),this.initBitty(),this.addEventListeners(),"function"==typeof this.conn.bittyInit&&("AsyncFunction"===this.conn.bittyInit[Symbol.toStringTag]?await this.conn.bittyInit():this.conn.bittyInit()))}addEventListeners(){this.#t.forEach(e=>{document.addEventListener(e,e=>{e.target&&"bitty-js"!==e.target.nodeName.toLowerCase()&&e.target.dataset&&e.target.dataset.send&&(e.uuid=t(),this.handleEventBridge.call(this,e))})})}addReceiver(t,e){this.conn[t]&&this.#e.push({key:t,f:s=>{this.conn[t](s,e)}})}async makeConnection(){try{if(!this.dataset||!this.dataset.connect)return void this.error("Missing data-connect attribute");if("undefined"!=typeof bittyClasses&&void 0!==window.bittyClasses[this.dataset.connect])this.connPath=null,this.connClass=this.dataset.connect,this.conn=new bittyClasses[this.connClass];else{const t=this.dataset.connect.split("|");this.connPath=t[0];const e=await import(this.connPath);void 0===t[1]?(this.connClass="default",this.conn=new e.default):(this.connClass=t[1],this.conn=new e[this.connClass])}}catch(t){this.error(t)}}forward(t,e){t.target&&t.target.dataset&&(t.target.dataset.forward=e),this.handleEvent(t)}error(t){console.error(`bitty-js error: ${t} on element ${this.dataset.uuid}`)}handleEvent(t){t.target.dataset.forward?(this.processSignals(t.target.dataset.forward),delete t.target.dataset.forward):t.target.dataset.send&&this.processSignals(t.target.dataset.send)}handleMutations(t,e){for(const e of t)if("childList"===e.type){for(const t of e.removedNodes)if(t.dataset&&t.dataset.receive)return void this.loadReceivers();for(const t of e.addedNodes)if(t.dataset&&(t.dataset.receive||t.dataset.send))return this.setIds(),void this.loadReceivers()}}initBitty(){this.conn.api=this,this.observerConfig={childList:!0,subtree:!0},this.observer=new MutationObserver(this.watchMutations),this.observer.observe(this,this.observerConfig),this.dataset.send&&this.handleEvent({uuid:t(),target:this}),this.dataset.listeners&&(this.#t=this.dataset.listeners.split("|"))}loadReceivers(){this.#e=[],this.querySelectorAll("[data-receive]").forEach(t=>{t.dataset.receive.split("|").forEach(e=>{this.addReceiver(e,t)})})}processSignals(t){t.split("|").forEach(t=>{let e=0;this.#e.forEach(s=>{s.key===t&&(e+=1,s.f(event))}),0===e&&this.conn[t]&&this.conn[t](event,null)})}setIds(){this.querySelectorAll("*").forEach(e=>{void 0===e.dataset.uuid&&(e.dataset.uuid=t())})}}customElements.define("bitty-js",e);