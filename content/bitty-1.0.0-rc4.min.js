function t(){return self.crypto.randomUUID()}class e extends HTMLElement{constructor(){super(),this.version=[1,0,0,"rc4"],this.metadata=["Copyright 2025 - Alan W. Smith","License at: htttp://bitty.alanwsmith.com/ - 2y1pBoEREr3eWA1ubCCOXdmRCdn"],this.config={logMissingAttributes:!0,logMissingFunctions:!0}}async connectedCallback(){this.dataset.uuid=t(),this.loadWindowConfig(),this.receivers=[],this.setIds(),await this.makeConnection(),this.conn&&(this.conn.api=this,this.handleEventBridge=this.handleEvent.bind(this),this.watchMutations=this.handleMutations.bind(this),this.loadReceivers(),this.addObserver(),this.addEventListeners(),await this.callBittyInit(),this.runSendFromComponent())}addEventListeners(){let e=["click","input"];this.dataset.listeners&&(e=this.dataset.listeners.split("|").map(t=>t.trim())),e.forEach(e=>{this.addEventListener(e,e=>{e.target&&"bitty-js"!==e.target.nodeName.toLowerCase()&&e.target.dataset&&e.target.dataset.send&&(e.uuid=t(),this.handleEventBridge.call(this,e))})})}addObserver(){this.observerConfig={childList:!0,subtree:!0},this.observer=new MutationObserver(this.watchMutations),this.observer.observe(this,this.observerConfig)}addReceiver(t,e){this.conn[t]&&this.receivers.push({key:t,f:s=>{this.conn[t](s,e)}})}async callBittyInit(){"function"==typeof this.conn.bittyInit&&("AsyncFunction"===this.conn.bittyInit[Symbol.toStringTag]?await this.conn.bittyInit():this.conn.bittyInit())}error(t){console.error(`bitty-js error: ${t} on element ${this.dataset.uuid}`)}forward(t,e){t?t.target&&t.target.dataset&&(t.target.dataset.forward=e,this.handleEvent(t)):this.handleEvent({type:"bittyforward",target:{dataset:{forward:e}}})}handleEvent(t){"bittyforward"!==t.type&&"bittysend"!==t.type&&t.stopPropagation(),t.target.dataset.forward?(this.processSignals(t.target.dataset.forward),delete t.target.dataset.forward):t.target.dataset.send&&this.processSignals(t.target.dataset.send)}handleMutations(t,e){for(const e of t)"childList"===e.type&&(e.addedNodes.length>0||e.removedNodes.length>0)&&(this.setIds(),this.loadReceivers())}loadReceivers(){this.receivers=[],this.querySelectorAll("[data-receive]").forEach(t=>{t.dataset.receive.split("|").forEach(e=>{this.addReceiver(e,t)})}),this.missingAttributes(),this.missingFunctions()}loadWindowConfig(){window.bittyConfig&&Object.keys(window.bittyConfig).forEach(t=>{this.config[t]=window.bittyConfig[t]})}async makeConnection(){try{if(!this.dataset||!this.dataset.connect)return void this.error("Missing data-connect attribute");if("undefined"!=typeof bittyClasses&&void 0!==window.bittyClasses[this.dataset.connect])this.connPath=null,this.connClass=this.dataset.connect,this.conn=new bittyClasses[this.connClass];else{const t=this.dataset.connect.split("|");this.connPath=t[0];const e=await import(this.connPath);void 0===t[1]?(this.connClass="default",this.conn=new e.default):(this.connClass=t[1],this.conn=new e[this.connClass])}}catch(t){this.error(t)}}missingAttributes(){const t=[],e=[];this.querySelectorAll("[data-send]").forEach(t=>{t.dataset.send.split("|").forEach(s=>{e.push([s,t])})});const s=[];return this.querySelectorAll("[data-receive]").forEach(t=>{t.dataset.receive.split("|").forEach(e=>{s.push([e,t])})}),e.forEach(e=>{[...s].map(t=>t[0]).includes(e[0])||t.push({level:"WARN",bittyUUID:this.dataset.uuid,targetEl:e[1],type:"no-send-attribute",payload:{signal:e[0]}})}),s.forEach(s=>{[...e].map(t=>t[0]).includes(s[0])||t.push({level:"WARN",bittyUUID:this.dataset.uuid,targetEl:s[1],type:"no-receive-attribute",payload:{signal:s[0]}})}),!0===this.config.logMissingAttributes&&t.forEach(t=>{console.log(t)}),t}missingFunctions(){const t=[],e=[];return this.querySelectorAll("[data-send]").forEach(t=>{t.dataset.send.split("|").forEach(s=>{e.map(t=>t[0]).includes(s),e.push([s,t])})}),e.forEach(e=>{"function"!=typeof this.conn[e[0]]&&t.push({level:"WARN",bittyUUID:this.dataset.uuid,targetEl:e[1],type:"missing-function-for-send",payload:{signal:e[0]}})}),!0===this.config.logMissingFunctions&&t.forEach(t=>{console.log(t)}),t}processSignals(t){t.split("|").forEach(t=>{let e=0;this.receivers.forEach(s=>{s.key===t&&(e+=1,s.f(event))}),0===e&&this.conn[t]&&this.conn[t](event,null)})}runSendFromComponent(){this.dataset.send&&this.handleEvent({type:"bittysend",uuid:t(),target:this})}setIds(){this.querySelectorAll("*").forEach(e=>{void 0===e.dataset.uuid&&(e.dataset.uuid=t())})}}customElements.define("bitty-v1-rc4",e);