class t extends HTMLElement{constructor(){super(),this.version=[1,0,0,"rc1"],this.metadata=["Copyright 2025 - Alan W. Smith","MIT Based License at: htttp://bitty-js.alanwsmith.com/","License Hash: 2y1pBoEREr3eWA1ubCCOXdmRCdn"]}#t=["click","input"];#e=[];#s=[];async connectedCallback(){this.setParentId(),this.setIds(),await this.makeConnection(),void 0!==this.connection&&(this.requestUpdate=this.handleChange.bind(this),this.watchMutations=this.handleMutations.bind(this),this.updateWatchers=this.handleWatchers.bind(this),this.loadReceivers(),this.loadWatchers(),this.initBitty(),this.addEventListeners(),"function"==typeof this.connection.bittyInit&&this.connection.bittyInit())}addEventListeners(){this.#t.forEach(t=>{this.addEventListener(t,t=>{this.requestUpdate.call(this,t)})}),this.addEventListener("bittysignal",t=>{this.updateWatchers.call(this,t)})}addReceiver(t,e){void 0!==this.connection[`${t}`]&&this.#e.push({key:t,f:s=>{this.connection[`${t}`](s,e)}})}addWatcher(t,e){void 0!==this.connection[`${t}`]&&this.#s.push({key:t,f:s=>{this.connection[`${t}`](s,e)}})}async makeConnection(){try{if(void 0===this.dataset||void 0===this.dataset.connect)return void this.error("Missing data-connect attribute");if("undefined"!=typeof bittyClasses&&void 0!==window.bittyClasses[this.dataset.connect])this.connectionPath=null,this.connectionClass=this.dataset.connect,this.connection=new bittyClasses[this.connectionClass];else{const t=this.dataset.connect.split("|");this.connectionPath=t[0];const e=await import(this.connectionPath);void 0===t[1]?(this.connectionClass="default",this.connection=new e.default):(this.connectionClass=t[1],this.connection=new e[this.connectionClass])}}catch(t){this.error(t)}}send(t,e){this.sendUpdates(t,e)}error(t){console.error(`bitty-js error: ${t} on element ${this.dataset.uuid}`)}handleChange(t){void 0!==t.target&&void 0!==t.target.dataset&&("BITTY-JS"!==t.target.nodeName&&void 0!==t.target.dataset.send&&this.sendUpdates(t,t.target.dataset.send),t.stopPropagation())}handleMutations(t,e){for(const e of t)if("childList"===e.type){for(const t of e.removedNodes)if(t.dataset&&(t.dataset.receive||t.dataset.send||t.dataset.watch))return this.setIds(),this.loadReceivers(),void this.loadWatchers();for(const t of e.addedNodes)if(t.dataset&&(t.dataset.receive||t.dataset.send||t.dataset.watch))return this.setIds(),this.loadReceivers(),void this.loadWatchers()}}handleWatchers(t){void 0!==t.detail&&void 0!==t.detail.name&&void 0!==t.detail.event&&this.updateWatcher(t.detail.event,t.detail.name)}initBitty(){this.connection.api=this,this.observerConfig={childList:!0,subtree:!0},this.observer=new MutationObserver(this.watchMutations),this.observer.observe(this,this.observerConfig),void 0!==this.dataset.send&&this.sendUpdates({target:this},this.dataset.send),void 0!==this.dataset.listeners&&(this.#t=this.dataset.listeners.split("|"))}loadReceivers(){this.#e=[];this.querySelectorAll("[data-receive]").forEach(t=>{t.dataset.receive.split("|").forEach(e=>{this.addReceiver(e,t)})})}loadWatchers(){this.#s=[];this.querySelectorAll("[data-watch]").forEach(t=>{t.dataset.watch.split("|").forEach(e=>{this.addWatcher(e,t)})})}sendUpdates(t,e){e.split("|").forEach(e=>{const s=new CustomEvent("bittysignal",{bubbles:!0,detail:{name:e,event:t}});this.parentElement.dispatchEvent(s);let i=0;this.#e.forEach(s=>{s.key===e&&(i+=1,s.f(t))}),0===i&&void 0!==this.connection[e]&&this.connection[e](t,null)})}setIds(){this.querySelectorAll("*").forEach(t=>{if(void 0===t.dataset.uuid){const e=self.crypto.randomUUID();t.dataset.uuid=e}})}setParentId(){const t=self.crypto.randomUUID();this.dataset.uuid=t}updateWatcher(t,e){this.#s.forEach(s=>{s.key===e&&s.f(t)})}}customElements.define("bitty-js",t);