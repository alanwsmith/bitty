{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "bitty-2.0.0-rc1.full.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagName",
          "default": "`bitty-${version[0]}-${version[1]}`"
        },
        {
          "kind": "class",
          "description": "",
          "name": "BittyJs",
          "members": [
            {
              "kind": "method",
              "name": "fetchHTML",
              "parameters": [
                {
                  "name": "url"
                },
                {
                  "name": "subs",
                  "default": "[]"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetchJSON",
              "parameters": [
                {
                  "name": "url"
                },
                {
                  "name": "subs",
                  "default": "[]"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetchLines",
              "parameters": [
                {
                  "name": "url"
                },
                {
                  "name": "subs",
                  "default": "[]"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetchSVG",
              "parameters": [
                {
                  "name": "url"
                },
                {
                  "name": "subs",
                  "default": "[]"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetchTemplate",
              "parameters": [
                {
                  "name": "url"
                },
                {
                  "name": "subs",
                  "default": "[]"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetchTxt",
              "parameters": [
                {
                  "name": "url"
                },
                {
                  "name": "subs",
                  "default": "[]"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "forward",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "signal"
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadCSS",
              "parameters": [
                {
                  "name": "url"
                },
                {
                  "name": "subs",
                  "default": "[]"
                },
                {
                  "name": "options",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "match",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "el"
                },
                {
                  "name": "key",
                  "default": "\"\""
                }
              ]
            },
            {
              "kind": "method",
              "name": "setProp",
              "parameters": [
                {
                  "name": "key"
                },
                {
                  "name": "value"
                }
              ]
            },
            {
              "kind": "method",
              "name": "useTemplate",
              "parameters": [
                {
                  "name": "content"
                },
                {
                  "name": "subs",
                  "default": "[]"
                }
              ]
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "object"
              },
              "default": "{ listeners: [\"click\", \"input\"], }"
            },
            {
              "kind": "field",
              "name": "metadata",
              "type": {
                "text": "object"
              },
              "default": "{ copyright: \"Copyright 2025 - Alan W. Smith\", license: \"License at: htttp://bitty.alanwsmith.com/ - 2y1pBoEREr3eWA1ubCCOXdmRCdn\", version: version, }"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Available: only in bitty-#-# component tags Defines   the module/class to use for the functionality of the component. If there is no `data-connect` attribute the bitty component attempts to use `window.BittyClass`. If that's not available bitty throws an error. If `data-connect` exists and it's values matches a class on the window object, then that class gets used. For example: <bitty-#-# data-connect=\"ExampleClass\"></bitty-#-#> uses window.ExampleClass if it's available or throws an error if it's not. If a class isn't found the value of `data-connect` is treated as a path from which to load an external module. For example, <bitty-#-# data-connect=\"/modules/example.js\"></bitty-#-#> Attempts to load the module: `/modules/example.js` and use its default class defined by: export default class { } TKTKTKTKT: Adding alternate class with data-connect=\"/some/path.js|AltClass\"",
              "name": "data-connect"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Change the event listeners the component uses. For example: data-listeners=\"mouseenter\" Multiple listeners are separated by a pipe: data-listeners=\"mouseenter|mouseleave\" The default listeners are 'click' and 'input'. Using `data-listeners` overrides them complete. If you need them along with the alternate listeners they must be included. data-listeners=\"mouseenter|mouseleave|click|input\" Turning off all listeners can be done by passing an empty string data-listeners=\"\"",
              "name": "data-listeners"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Signals the child element receive. data-receive=\"alfa\" data-receive=\"bravo|charlie\"",
              "name": "data-receive"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Signals to send when the component finishes initializing. Separate multiple signals with pipes data-send=\"alfa\" data-send=\"bravo|charlie\"",
              "name": "data-send"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "tagName",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "tagName",
          "declaration": {
            "name": "BittyJs",
            "module": "bitty-2.0.0-rc1.full.js"
          }
        }
      ]
    }
  ]
}
